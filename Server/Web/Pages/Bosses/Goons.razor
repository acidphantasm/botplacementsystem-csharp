@page "/botplacementsystem/bossconfig/goons"
@layout MainLayout

<style>
    .mud-divider {
    border-width: 2.5px;
    }
</style>

<MudMainContent>
    <MudContainer Class="mb-20">
        <MudExpansionPanels MultiExpansion="true">
            <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Text="Enable/Disable" Expanded=true>
                <MudGrid>
                    <MudItem xs="1" />
                    <MudItem xs="4">
                        <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                            <MudTooltip Text="Allows Goons to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                <MudText>Enable Goons</MudText>
                            </MudTooltip>
                        </MudPaper>
                    </MudItem>
                    <MudItem xs="6">
                        <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                            <MudSwitch T="bool" @bind-Value="_goons_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_goons_Enabled</MudSwitch>
                        </MudPaper>
                    </MudItem>
                    <MudItem xs="1">
                        @if (MainLayout._appUndoButtonToggle &&
                        MainLayout.pendingChanges.Contains("_goons_Enabled"))
                        {
                            <MudButton @onclick="undo_Goons_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                        }
                        else if (MainLayout._appDefaultButtonToggle &&
                        _goons_Enabled != true)
                        {
                            <MudButton @onclick="default_Goons_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                        }
                    </MudItem>
                </MudGrid>
            </MudExpansionPanel>
            @if (_goons_Enabled)
            {
                <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Text="General" Expanded=true>
                    <MudGrid>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Timer</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Time</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_Time"))
                            {
                                <MudButton @onclick="undo_Goons_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_Time != -1)
                            {
                                <MudButton @onclick="default_Goons_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                    </MudGrid>
                </MudExpansionPanel>
                <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                    <MudGrid>
                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Customs</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Customs_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_Customs_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_Customs_SpawnChance != 30)
                            {
                                <MudButton @onclick="default_Goons_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_Customs_SpawnZones"
                                           SelectedValuesChanged="On_Goons_Customs_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_Customs_SpawnChance == 0">
                                    @foreach (var name in CustomsSpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle &&
                                 MainLayout.pendingChanges.Contains("_goons_Customs_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle &&
                                     _goons_Customs_SpawnZones.Count != 1 ||
                                     !_goons_Customs_SpawnZones.Contains("ZoneScavBase") ||
                                     _goons_Customs_SpawnZones.Contains(string.Empty))
                            {
                                <MudButton @onclick="default_Goons_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Factory (Day)</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_FactoryDay_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_FactoryDay_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_FactoryDay_SpawnChance != 0)
                            {
                                <MudButton @onclick="default_Goons_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_FactoryDay_SpawnZones"
                                           SelectedValuesChanged="On_Goons_FactoryDay_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_FactoryDay_SpawnChance == 0">
                                    @foreach (var name in FactorySpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_FactoryDay_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && !_goons_FactoryDay_SpawnZones.Contains(string.Empty))
                            {
                                <MudButton @onclick="default_Goons_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Factory (Night)</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_FactoryNight_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_FactoryNight_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_FactoryNight_SpawnChance != 0)
                            {
                                <MudButton @onclick="default_Goons_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_FactoryNight_SpawnZones"
                                           SelectedValuesChanged="On_Goons_FactoryNight_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_FactoryNight_SpawnChance == 0">
                                    @foreach (var name in FactorySpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_FactoryNight_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && !_goons_FactoryNight_SpawnZones.Contains(string.Empty))
                            {
                                <MudButton @onclick="default_Goons_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Interchange</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Interchange_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_Interchange_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_Interchange_SpawnChance != 0)
                            {
                                <MudButton @onclick="default_Goons_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_Interchange_SpawnZones"
                                           SelectedValuesChanged="On_Goons_Interchange_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_Interchange_SpawnChance == 0">
                                    @foreach (var name in InterchangeSpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_Interchange_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_Interchange_SpawnZones.Count != 1 || !_goons_Interchange_SpawnZones.Contains(string.Empty))
                            {
                                <MudButton @onclick="default_Goons_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Labs</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Labs_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_Labs_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_Labs_SpawnChance != 0)
                            {
                                <MudButton @onclick="default_Goons_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_Labs_SpawnZones"
                                           SelectedValuesChanged="On_Goons_Labs_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_Labs_SpawnChance == 0">
                                    @foreach (var name in LabsSpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_Labs_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && !_goons_Labs_SpawnZones.Contains(string.Empty))
                            {
                                <MudButton @onclick="default_Goons_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Lighthouse</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Lighthouse_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_Lighthouse_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_Lighthouse_SpawnChance != 30)
                            {
                                <MudButton @onclick="default_Goons_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_Lighthouse_SpawnZones"
                                           SelectedValuesChanged="On_Goons_Lighthouse_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_Lighthouse_SpawnChance == 0">
                                    @foreach (var name in LighthouseSpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle &&
                                 MainLayout.pendingChanges.Contains("_goons_Lighthouse_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle &&
                                     _goons_Lighthouse_SpawnZones.Count != 2 ||
                                     _goons_Lighthouse_SpawnZones.Contains(string.Empty) ||
                                     !_goons_Lighthouse_SpawnZones.Contains("Zone_TreatmentContainers") ||
                                     !_goons_Lighthouse_SpawnZones.Contains("Zone_Chalet"))
                            {
                                <MudButton @onclick="default_Goons_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Reserve</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Reserve_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_Reserve_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_Reserve_SpawnChance != 0)
                            {
                                <MudButton @onclick="default_Goons_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_Reserve_SpawnZones"
                                           SelectedValuesChanged="On_Goons_Reserve_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_Reserve_SpawnChance == 0">
                                    @foreach (var name in ReserveSpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_Reserve_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_Reserve_SpawnZones.Count != 1 || !_goons_Reserve_SpawnZones.Contains(string.Empty))
                            {
                                <MudButton @onclick="default_Goons_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Ground Zero</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_GroundZero_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_GroundZero_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_GroundZero_SpawnChance != 0)
                            {
                                <MudButton @onclick="default_Goons_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_GroundZero_SpawnZones"
                                           SelectedValuesChanged="On_Goons_GroundZero_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_GroundZero_SpawnChance == 0">
                                    @foreach (var name in GroundZeroSpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_GroundZero_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle &&
                                     _goons_GroundZero_SpawnZones.Count != 1 ||
                                     !_goons_GroundZero_SpawnZones.Contains(string.Empty))
                            {
                                <MudButton @onclick="default_Goons_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Ground Zero (High)</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_GroundZeroHigh_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle && MainLayout.pendingChanges.Contains("_goons_GroundZeroHigh_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle &&
                                     _goons_GroundZeroHigh_SpawnChance != 0)
                            {
                                <MudButton @onclick="default_Goons_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_GroundZeroHigh_SpawnZones"
                                           SelectedValuesChanged="On_Goons_GroundZeroHigh_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_GroundZeroHigh_SpawnChance == 0">
                                    @foreach (var name in GroundZeroSpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle &&
                                 MainLayout.pendingChanges.Contains("_goons_GroundZeroHigh_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle &&
                                     _goons_GroundZeroHigh_SpawnZones.Count != 1 ||
                                     !_goons_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                            {
                                <MudButton @onclick="default_Goons_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Shoreline</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Shoreline_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle &&
                                 MainLayout.pendingChanges.Contains("_goons_Shoreline_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle &&
                                     _goons_Shoreline_SpawnChance != 30)
                            {
                                <MudButton @onclick="default_Goons_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_Shoreline_SpawnZones"
                                           SelectedValuesChanged="On_Goons_Shoreline_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_Shoreline_SpawnChance == 0">
                                    @foreach (var name in ShorelineSpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle &&
                                 MainLayout.pendingChanges.Contains("_goons_Shoreline_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle &&
                                     _goons_Shoreline_SpawnZones.Count != 1 ||
                                     !_goons_Shoreline_SpawnZones.Contains("ZoneMeteoStation"))
                            {
                                <MudButton @onclick="default_Goons_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Streets of Tarkov</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Streets_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle &&
                                 MainLayout.pendingChanges.Contains("_goons_Streets_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle &&
                                     _goons_Streets_SpawnChance != 0)
                            {
                                <MudButton @onclick="default_Goons_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_Streets_SpawnZones"
                                           SelectedValuesChanged="On_Goons_Streets_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_Streets_SpawnChance == 0">
                                    @foreach (var name in StreetsSpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle &&
                                 MainLayout.pendingChanges.Contains("_goons_Streets_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle &&
                                     _goons_Streets_SpawnZones.Count != 1 ||
                                     !_goons_Streets_SpawnZones.Contains(string.Empty))
                            {
                                <MudButton @onclick="default_Goons_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Woods</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Woods_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle &&
                                 MainLayout.pendingChanges.Contains("_goons_Woods_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle &&
                                     _goons_Woods_SpawnChance != 30)
                            {
                                <MudButton @onclick="default_Goons_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_Woods_SpawnZones"
                                           SelectedValuesChanged="On_Goons_Woods_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_Woods_SpawnChance == 0">
                                    @foreach (var name in WoodsSpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle &&
                                 MainLayout.pendingChanges.Contains("_goons_Woods_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle &&
                                     _goons_Woods_SpawnZones.Count != 1 ||
                                     !_goons_Woods_SpawnZones.Contains("ZoneScavBase2"))
                            {
                                <MudButton @onclick="default_Goons_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>

                        <MudItem xs="12">
                            <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                <MudText>Labyrinth</MudText>
                                <MudDivider/>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Chance</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Labyrinth_SpawnChance</MudButton>
                        </MudItem>
                        <MudItem xs="5">
                            <MudSlider @bind-Value="_goons_Labyrinth_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle &&
                                 MainLayout.pendingChanges.Contains("_goons_Labyrinth_SpawnChance"))
                            {
                                <MudButton @onclick="undo_Goons_Labyrinth_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && _goons_Labyrinth_SpawnChance != 0)
                            {
                                <MudButton @onclick="default_Goons_Labyrinth_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="4">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                    <MudText>Spawn Zones</MudText>
                                </MudTooltip>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1"/>
                        <MudItem xs="5">
                            <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                           MultiSelection="true"
                                           SelectedValues="_goons_Labyrinth_SpawnZones"
                                           SelectedValuesChanged="On_Goons_Labyrinth_SpawnZonesChanged"
                                           Variant="Variant.Filled"
                                           AnchorOrigin="Origin.CenterLeft"
                                           Dense Clearable ShrinkLabel
                                           Disabled="_goons_Labyrinth_SpawnChance == 0">
                                    @foreach (var name in LabyrinthSpawnZones)
                                    {
                                        <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudPaper>
                        </MudItem>
                        <MudItem xs="1">
                            @if (MainLayout._appUndoButtonToggle &&
                                 MainLayout.pendingChanges.Contains("_goons_Labyrinth_SpawnZones"))
                            {
                                <MudButton @onclick="undo_Goons_Labyrinth_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                            }
                            else if (MainLayout._appDefaultButtonToggle && !_goons_Labyrinth_SpawnZones.Contains(string.Empty))
                            {
                                <MudButton @onclick="default_Goons_Labyrinth_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                            }
                        </MudItem>
                    </MudGrid>
                </MudExpansionPanel>
            }
        </MudExpansionPanels>
    </MudContainer>
</MudMainContent>

@code {
    #region LocationZones
    private string[] CustomsSpawnZones =
    {
        "ZoneBrige","ZoneCrossRoad","ZoneDormitory","ZoneGasStation","ZoneFactoryCenter","ZoneFactorySide","ZoneOldAZS","ZoneBlockPost","ZoneTankSquare","ZoneWade","ZoneCustoms","ZoneScavBase"
    };
    private string[] FactorySpawnZones =
    {
        "BotZone"
    };
    private string[] InterchangeSpawnZones =
    {
        "ZoneCenterBot","ZoneIDEA","ZoneCenter","ZoneIDEAPark",
        "ZoneTrucks","ZoneRoad","ZoneOLI","ZoneGoshan",
        "ZoneOLIPark","ZonePowerStation"
    };
    private string[] LabsSpawnZones =
    {
        "BotZoneBasement","BotZoneFloor1","BotZoneFloor2","BotZoneGate1",
        "BotZoneGate2"
    };
    private string[] LighthouseSpawnZones =
    {
        "Zone_Containers","Zone_Rocks","Zone_Chalet","Zone_Village",
        "Zone_Bridge","Zone_OldHouse","Zone_LongRoad","Zone_RoofBeach",
        "Zone_DestroyedHouse","Zone_RoofContainers","Zone_Blockpost","Zone_RoofRocks",
        "Zone_TreatmentRocks","Zone_TreatmentContainers","Zone_TreatmentBeach","Zone_Hellicopter",
        "Zone_SniperPeak","Zone_Island"
    };
    private string[] ReserveSpawnZones =
    {
        "ZoneRailStrorage","ZonePTOR1","ZonePTOR2","ZoneBarrack",
        "ZoneBunkerStorage","ZoneSubStorage","ZoneSubCommand"
    };
    private string[] GroundZeroSpawnZones =
    {
        "ZoneSandbox"
    };
    private string[] ShorelineSpawnZones =
    {
        "ZoneGreenHouses","ZoneIsland","ZoneForestGasStation","ZoneGasStation",
        "ZonePowerStation","ZoneBunker","ZoneBusStation","ZonePort",
        "ZoneForestTruck","ZoneForestSpawn","ZoneSanatorium1","ZoneSanatorium2",
        "ZoneStartVillage","ZoneMeteoStation","ZoneRailWays","ZoneSmuglers",
        "ZonePassClose","ZoneTunnel"
    };
    private string[] StreetsSpawnZones =
    {
        "ZoneSW01","ZoneConstruction","ZoneCarShowroom","ZoneCinema",
        "ZoneFactory","ZoneHotel_1","ZoneHotel_2","ZoneConcordia_1",
        "ZoneConcordiaParking","ZoneColumn","ZoneSW00","ZoneStilo",
        "ZoneCard1","ZoneMvd","ZoneClimova"
    };
    private string[] WoodsSpawnZones =
    {
        "ZoneWoodCutter","ZoneHouse","ZoneBigRocks","ZoneRoad",
        "ZoneHighRocks","ZoneMiniHouse","ZoneRedHouse","ZoneScavBase2",
        "ZoneClearVill","ZoneBrokenVill","ZoneUsecBase","ZoneStoneBunker",
        "ZoneDepo"
    };
    private string[] LabyrinthSpawnZones =
    {
        ""
    };
    #endregion

    #region GoonsGlobalConfig
    private bool _goons_Enabled
    {
        get => ModConfig.Config.BossConfig.BossKnight.Enable;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.Enable);
            ModConfig.Config.BossConfig.BossKnight.Enable = value;
        }
    }
    private void undo_Goons_Enable() => _goons_Enabled = ModConfig.OriginalConfig.BossConfig.BossKnight.Enable;
    private void default_Goons_Enable() => _goons_Enabled = true;
    private long _goons_Time
    {
        get => ModConfig.Config.BossConfig.BossKnight.Time;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.Time);
            ModConfig.Config.BossConfig.BossKnight.Time = value;
        }
    }
    private void undo_Goons_Time() => _goons_Time = ModConfig.OriginalConfig.BossConfig.BossKnight.Time;
    private void default_Goons_Time() => _goons_Time = -1;
    #endregion
    #region GoonsSpawnConfig
    #region GoonsCustoms
    private int _goons_Customs_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.Customs;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Customs);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.Customs = value;
        }
    }
    private void undo_Goons_Customs_SpawnChance() => _goons_Customs_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Customs;
    private void default_Goons_Customs_SpawnChance() => _goons_Customs_SpawnChance = 30;
    private List<string> _goons_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.Customs.Split(',').ToList();
            return listValues;
        }
        set 
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.Customs = "";
                Utils.UpdateView("", ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Customs);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.Customs = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Customs);
            }
        }
    }
    private void On_Goons_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Customs_SpawnZones() => _goons_Customs_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Customs };
    private void default_Goons_Customs_SpawnZones() => _goons_Customs_SpawnZones = new List<string> { "ZoneScavBase" };
    #endregion
    #region GoonsFactory
    private int _goons_FactoryDay_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.Factory4Day;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Factory4Day);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.Factory4Day = value;
        }
    }
    private void undo_Goons_FactoryDay_SpawnChance() => _goons_FactoryDay_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Factory4Day;
    private void default_Goons_FactoryDay_SpawnChance() => _goons_FactoryDay_SpawnChance = 0;
    private List<string> _goons_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.Factory4Day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.Factory4Day = string.Empty;
                Utils.UpdateView(string.Empty, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Factory4Day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.Factory4Day = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Factory4Day);
            }
        }
    }
    private void On_Goons_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Goons_FactoryDay_SpawnZones() => _goons_FactoryDay_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Factory4Day };
    private void default_Goons_FactoryDay_SpawnZones() => _goons_FactoryDay_SpawnZones = new List<string>();
    private int _goons_FactoryNight_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.Factory4Night;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Factory4Night);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.Factory4Night = value;
        }
    }
    private void undo_Goons_FactoryNight_SpawnChance() => _goons_FactoryNight_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Factory4Night;
    private void default_Goons_FactoryNight_SpawnChance() => _goons_FactoryNight_SpawnChance = 0;
    private List<string> _goons_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.Factory4Night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.Factory4Night = string.Empty;
                Utils.UpdateView(string.Empty, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Factory4Night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.Factory4Night = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Factory4Night);
            }
        }
    }
    private void On_Goons_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Goons_FactoryNight_SpawnZones() => _goons_FactoryNight_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Factory4Night };
    private void default_Goons_FactoryNight_SpawnZones() => _goons_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region GoonsInterchange
    private int _goons_Interchange_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.Interchange;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Interchange);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.Interchange = value;
        }
    }
    private void undo_Goons_Interchange_SpawnChance() => _goons_Interchange_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Interchange;
    private void default_Goons_Interchange_SpawnChance() => _goons_Interchange_SpawnChance = 0;
    private List<string> _goons_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.Interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.Interchange = "";
                Utils.UpdateView("", ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.Interchange = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Interchange);
            }
        }
    }
    private void On_Goons_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Interchange_SpawnZones() => _goons_Interchange_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Interchange };
    private void default_Goons_Interchange_SpawnZones() => _goons_Interchange_SpawnZones = new List<string>();
    #endregion
    #region GoonsLabs
    private int _goons_Labs_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.Laboratory;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Laboratory);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.Laboratory = value;
        }
    }
    private void undo_Goons_Labs_SpawnChance() => _goons_Labs_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Laboratory;
    private void default_Goons_Labs_SpawnChance() => _goons_Labs_SpawnChance = 0;
    private List<string> _goons_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.Laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.Laboratory = "";
                Utils.UpdateView("", ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.Laboratory = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Laboratory);
            }
        }
    }
    private void On_Goons_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Labs_SpawnZones() => _goons_Labs_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Laboratory };
    private void default_Goons_Labs_SpawnZones() => _goons_Labs_SpawnZones = new List<string>();
    #endregion
    #region GoonsLighthouse
    private int _goons_Lighthouse_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.Lighthouse;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Lighthouse);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.Lighthouse = value;
        }
    }
    private void undo_Goons_Lighthouse_SpawnChance() => _goons_Lighthouse_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Lighthouse;
    private void default_Goons_Lighthouse_SpawnChance() => _goons_Lighthouse_SpawnChance = 30;
    private List<string> _goons_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.Lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.Lighthouse = "";
                Utils.UpdateView("", ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.Lighthouse = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Lighthouse);
            }
        }
    }
    private void On_Goons_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Lighthouse_SpawnZones() => _goons_Lighthouse_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Lighthouse };
    private void default_Goons_Lighthouse_SpawnZones() => _goons_Lighthouse_SpawnZones = new List<string> { "Zone_TreatmentContainers,Zone_Chalet" };
    #endregion
    #region GoonsReserve
    private int _goons_Reserve_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.Reserve;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Reserve);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.Reserve = value;
        }
    }
    private void undo_Goons_Reserve_SpawnChance() => _goons_Reserve_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Reserve;
    private void default_Goons_Reserve_SpawnChance() => _goons_Reserve_SpawnChance = 0;
    private List<string> _goons_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.Reserve.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.Reserve = "";
                Utils.UpdateView("", ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Reserve);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.Reserve = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Reserve);
            }
        }
    }
    private void On_Goons_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Reserve_SpawnZones() => _goons_Reserve_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Reserve };
    private void default_Goons_Reserve_SpawnZones() => _goons_Reserve_SpawnZones = new List<string>();
    #endregion
    #region GoonsGroundZero
    private int _goons_GroundZero_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.GroundZero;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.GroundZero);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.GroundZero = value;
        }
    }
    private void undo_Goons_GroundZero_SpawnChance() => _goons_GroundZero_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.GroundZero;
    private void default_Goons_GroundZero_SpawnChance() => _goons_GroundZero_SpawnChance = 0;
    private List<string> _goons_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.GroundZero.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.GroundZero = "";
                Utils.UpdateView("", ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.GroundZero);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.GroundZero = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.GroundZero);
            }
        }
    }
    private void On_Goons_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Goons_GroundZero_SpawnZones() => _goons_GroundZero_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.GroundZero };
    private void default_Goons_GroundZero_SpawnZones() => _goons_GroundZero_SpawnZones = new List<string>();
    private int _goons_GroundZeroHigh_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.GroundZeroHigh;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.GroundZeroHigh);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.GroundZeroHigh = value;
        }
    }
    private void undo_Goons_GroundZeroHigh_SpawnChance() => _goons_GroundZeroHigh_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.GroundZeroHigh;
    private void default_Goons_GroundZeroHigh_SpawnChance() => _goons_GroundZeroHigh_SpawnChance = 0;
    private List<string> _goons_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.GroundZeroHigh.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.GroundZeroHigh = "";
                Utils.UpdateView("", ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.GroundZeroHigh);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.GroundZeroHigh = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.GroundZeroHigh);
            }
        }
    }
    private void On_Goons_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Goons_GroundZeroHigh_SpawnZones() => _goons_GroundZeroHigh_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.GroundZeroHigh };
    private void default_Goons_GroundZeroHigh_SpawnZones() => _goons_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region GoonsShoreline
    private int _goons_Shoreline_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.Shoreline;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Shoreline);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.Shoreline = value;
        }
    }
    private void undo_Goons_Shoreline_SpawnChance() => _goons_Shoreline_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Shoreline;
    private void default_Goons_Shoreline_SpawnChance() => _goons_Shoreline_SpawnChance = 30;
    private List<string> _goons_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.Shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.Shoreline = "";
                Utils.UpdateView("", ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.Shoreline = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Shoreline);
            }
        }
    }
    private void On_Goons_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Shoreline_SpawnZones() => _goons_Shoreline_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Shoreline };
    private void default_Goons_Shoreline_SpawnZones() => _goons_Shoreline_SpawnZones = new List<string> { "ZoneMeteoStation" };
    #endregion
    #region GoonsStreets
    private int _goons_Streets_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.TarkovStreets;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.TarkovStreets);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.TarkovStreets = value;
        }
    }
    private void undo_Goons_Streets_SpawnChance() => _goons_Streets_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.TarkovStreets;
    private void default_Goons_Streets_SpawnChance() => _goons_Streets_SpawnChance = 0;
    private List<string> _goons_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.TarkovStreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.TarkovStreets = "";
                Utils.UpdateView("", ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.TarkovStreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.TarkovStreets = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.TarkovStreets);
            }
        }
    }
    private void On_Goons_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Streets_SpawnZones() => _goons_Streets_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.TarkovStreets };
    private void default_Goons_Streets_SpawnZones() => _goons_Streets_SpawnZones = new List<string>();
    #endregion
    #region GoonsWoods
    private int _goons_Woods_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.Woods;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Woods);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.Woods = value;
        }
    }
    private void undo_Goons_Woods_SpawnChance() => _goons_Woods_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Woods;
    private void default_Goons_Woods_SpawnChance() => _goons_Woods_SpawnChance = 30;
    private List<string> _goons_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.Woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.Woods = "";
                Utils.UpdateView("", ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.Woods = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Woods);
            }
        }
    }
    private void On_Goons_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Woods_SpawnZones() => _goons_Woods_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Woods };
    private void default_Goons_Woods_SpawnZones() => _goons_Woods_SpawnZones = new List<string> { "ZoneScavBase2" };
    #endregion
    #region GoonsLabyrinth
    private int _goons_Labyrinth_SpawnChance
    {
        get => ModConfig.Config.BossConfig.BossKnight.SpawnChance.Labyrinth;
        set
        {
            Utils.UpdateView(value, ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Labyrinth);
            ModConfig.Config.BossConfig.BossKnight.SpawnChance.Labyrinth = value;
        }
    }
    private void undo_Goons_Labyrinth_SpawnChance() => _goons_Labyrinth_SpawnChance = ModConfig.OriginalConfig.BossConfig.BossKnight.SpawnChance.Labyrinth;
    private void default_Goons_Labyrinth_SpawnChance() => _goons_Labyrinth_SpawnChance = 0;
    private List<string> _goons_Labyrinth_SpawnZones
    {
        get
        {
            List<string> listValues = ModConfig.Config.BossConfig.BossKnight.BossZone.Labyrinth.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                ModConfig.Config.BossConfig.BossKnight.BossZone.Labyrinth = "";
                Utils.UpdateView("", ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Labyrinth);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                ModConfig.Config.BossConfig.BossKnight.BossZone.Labyrinth = listConverted;
                Utils.UpdateView(listConverted, ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Labyrinth);
            }
        }
    }
    private void On_Goons_Labyrinth_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Labyrinth_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Labyrinth_SpawnZones() => _goons_Labyrinth_SpawnZones = new List<string> { ModConfig.OriginalConfig.BossConfig.BossKnight.BossZone.Labyrinth };
    private void default_Goons_Labyrinth_SpawnZones() => _goons_Labyrinth_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region CASCADING PARAMETERS
    [CascadingParameter] public MainLayout? Layout { get; set; }
    #endregion
}