<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <OutputType>Library</OutputType>
    <RootNamespace>acidphantasm_botplacementsystem</RootNamespace>
    <AssemblyName>acidphantasm-botplacementsystem</AssemblyName>
    <LangVersion>latest</LangVersion>
    <Nullable>disable</Nullable>

    <!-- Output -->
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>

    <!-- Build Settings -->
    <Deterministic>true</Deterministic>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>

  <!-- Directories -->
  <PropertyGroup>
    <TarkovDir Condition=" '$(TarkovDir)' == '' ">D:\SPT 4.0.0 DEV\</TarkovDir>
    <TarkovPluginsSPTDir>$(TarkovDir)BepInEx\plugins\spt\</TarkovPluginsSPTDir>
    <TarkovManagedDir>$(TarkovDir)EscapeFromTarkov_Data\Managed\</TarkovManagedDir>
    <TarkovBepInExCoreDir>$(TarkovDir)BepInEx\core\</TarkovBepInExCoreDir>
  </PropertyGroup>

  <!-- References -->
  <ItemGroup>
    <Reference Include="0Harmony">
      <HintPath>$(TarkovBepInExCoreDir)0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="Spt.Common">
      <HintPath>$(TarkovPluginsSPTDir)spt-common.dll</HintPath>
    </Reference>
    <Reference Include="Spt.Reflection">
      <HintPath>$(TarkovPluginsSPTDir)spt-reflection.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp">
      <HintPath>$(TarkovManagedDir)Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="BepInEx">
      <HintPath>$(TarkovBepInExCoreDir)BepInEx.dll</HintPath>
    </Reference>
    <Reference Include="Comfort">
      <HintPath>$(TarkovManagedDir)Comfort.dll</HintPath>
    </Reference>
    <Reference Include="Comfort.Unity">
      <HintPath>$(TarkovManagedDir)Comfort.Unity.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(TarkovManagedDir)Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="Sirenix.Serialization">
      <HintPath>$(TarkovManagedDir)Sirenix.Serialization.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>$(TarkovManagedDir)UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(TarkovManagedDir)UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.IMGUIModule">
      <HintPath>$(TarkovManagedDir)UnityEngine.IMGUIModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.PhysicsModule">
      <HintPath>$(TarkovManagedDir)UnityEngine.PhysicsModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.TextRenderingModule">
      <HintPath>$(TarkovManagedDir)UnityEngine.TextRenderingModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(TarkovManagedDir)UnityEngine.UI.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>$(TarkovManagedDir)UnityEngine.InputLegacyModule.dll</HintPath>
    </Reference>
    <Reference Include="DOTween">
      <HintPath>$(TarkovManagedDir)DOTween.dll</HintPath>
    </Reference>
    <Reference Include="DOTween.Modules">
      <HintPath>$(TarkovManagedDir)DOTween.Modules.dll</HintPath>
    </Reference>
    <Reference Include="DissonanceVoip">
      <HintPath>$(TarkovManagedDir)DissonanceVoip.dll</HintPath>
    </Reference>
    <Reference Include="CommonExtensions">
      <HintPath>$(TarkovManagedDir)CommonExtensions.dll</HintPath>
    </Reference>
	<Reference Include="Unity.TextMeshPro">
		<HintPath>$(TarkovManagedDir)Unity.TextMeshPro.dll</HintPath>
	</Reference>
	<Reference Include="Unity.Postprocessing.Runtime">
		<HintPath>$(TarkovManagedDir)Unity.Postprocessing.Runtime.dll</HintPath>
	</Reference>
  </ItemGroup>

  <!-- Post-Build Actions -->
  <Target Name="PostBuild" AfterTargets="Build">
    <ItemGroup>
      <OutputDLL Include="$(TargetPath)" />
      <License Include="$(ProjectDir)LICENSE" Condition="Exists('$(ProjectDir)LICENSE')" />
        <ServerComponents Include="$(ProjectDir)../Server/bin/Release/$(ProjectName)/*.*" />
        <Defaults Include="$(ProjectDir)../Server/bin/Release/$(ProjectName)/Defaults/*.*" />
        <WebAssets Include="$(ProjectDir)../Server/bin/Release/$(ProjectName)/wwwroot/**/*.*" />
    </ItemGroup>

    <!-- Copy to Tarkov plugin directory -->
    <Copy SourceFiles="@(OutputDLL);@(License)" DestinationFolder="$(TarkovDir)BepInEx\plugins\$(ProjectName)\" />
    <Copy SourceFiles="@(ServerComponents)" DestinationFolder="$(TarkovDir)SPT\user\mods\$(ProjectName)\%(RecursiveDir)" />
    <Copy SourceFiles="@(Defaults)" DestinationFolder="$(TarkovDir)\SPT\user\mods\$(ProjectName)\Defaults\%(RecursiveDir)" />
    <Copy SourceFiles="@(WebAssets)" DestinationFolder="$(TarkovDir)\SPT\user\mods\$(ProjectName)\wwwroot\%(RecursiveDir)" />

    <!-- Create release ZIP -->
    <RemoveDir Directories="$(ProjectDir)release" />
    <Copy SourceFiles="@(OutputDLL);@(License)" DestinationFolder="$(ProjectDir)release\$(ProjectName)\BepInEx\plugins\$(ProjectName)\" />
    <Copy SourceFiles="@(ServerComponents)" DestinationFolder="$(ProjectDir)release\$(ProjectName)\SPT\user\mods\$(ProjectName)\%(RecursiveDir)" />
    <Copy SourceFiles="@(Defaults)" DestinationFolder="$(ProjectDir)release\$(ProjectName)\SPT\user\mods\$(ProjectName)\Defaults\%(RecursiveDir)" />
    <Copy SourceFiles="@(WebAssets)" DestinationFolder="$(ProjectDir)release\$(ProjectName)\SPT\user\mods\$(ProjectName)\wwwroot\%(RecursiveDir)" />
    <ZipDirectory SourceDirectory="$(ProjectDir)release\$(ProjectName)\" DestinationFile="$(ProjectDir)release\$(ProjectName).zip" />
  </Target>

</Project>
